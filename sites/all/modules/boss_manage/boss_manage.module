<?php

/**
 * @file
 * Enables users to choose a area manager.
 *
 * When enabled, the Drupal comment module creates a discussion
 * board for each Drupal node. Users can post comments to discuss
 * a forum topic, weblog post, story, collaborative book page, etc.
 */


/**
  * 实现钩子hook_menu().
  */
 function boss_manage_menu() {
    $items['boss_manage'] = array(
   'title' => t('请分配区域管理员！'),
     'page callback' => 'boss_manage_view',
     'access callback' => TRUE,
     'type' => MENU_CALLBACK,
   );

  return $items;
 }



function boss_manage_view() {
  return drupal_get_form('boss_manage_form');
  // return drupal_retrieve_form('boss_manage_form');
}


/**
  * 表单boss_manage_form的构建函数
 */
function boss_manage_form($form, &$form_state){
  // Node author information for administrators.
   $form['ssx'] = array(
    '#type' => 'fieldset',
    '#access' => TRUE,
    '#title' => t('您的位置'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#weight' => 20,
    );

   //dsm('boss_manage_form');
    //设置省市县对应元素的默认值
  $default_sheng = !empty($form_state['values']['sheng']) ? $form_state['values']['sheng'] : '';
  $default_shi = !empty($form_state['values']['shi']) ? $form_state['values']['shi'] : '';
  $default_xian = !empty($form_state['values']['xian']) ? $form_state['values']['xian'] : '';
  
  //构建省份的选项数组，首先设置了一个提示语
  $sheng_options = array(
    '' => '请选择省份',
  );
  
  //向数据库中查询省份信息，
 $query_sheng = db_select('taxonomy_term_data','ttd')
  ->fields('ttd', array('tid', 'name'));
  
  //因为省份是第一级术语，分类术语的父亲为0
  $query_sheng->leftJoin('taxonomy_term_hierarchy', 'tth', 'ttd.tid = tth.tid ');
  $query_sheng->condition('tth.parent', 0);
  
  //需要确定术语所在的词汇表，就是我们在前面创建的地区
 $query_sheng->leftJoin('taxonomy_vocabulary', 'tv', 'ttd.vid = tv.vid ');
  $query_sheng->condition('tv.machine_name', 'UserArea');
  
  //按照tid排序，并执行
 $result_sheng = $query_sheng->orderBy('tid')->execute();
  
  //将返回的结果，进行迭代，为$sheng_options赋值。
 foreach ($result_sheng as $record) {
    $sheng_options[$record->tid] = $record->name;
  }
 //控制表单样式
 drupal_add_css(drupal_get_path('theme', 'bartik_cainiang') . '/css/userarea.css');
  //省份表单元素
 $form['ssx']['sheng'] = array(   
    '#title' => t('请选择您所在的省份?'),
    '#prefix' => '<div class ="UserArea"><div id="sheng-wrapper-div">',   
    '#suffix' => '</div>',   
    '#type' => 'select', 
    '#options' => $sheng_options,   
    '#default_value' => $default_sheng,
     //#ajax属性数组  
    '#ajax' => array(     
      'callback' => 'boss_manage_sheng_callback',  
      //'path' => 'boss_manage',    
      'wrapper' => 'shi-wrapper-div',     
      'method' => 'replace',     
      'effect' => 'fade',   
    ), 
    '#DANGEROUS_SKIP_CHECK' => TRUE ,
  );
  
  //构建市的选项数组，首先设置了一个提示语
 $shi_options = array(
    '' => '请选择市',
  );
  //在省份不为空的情况下，取该省份下的所有的市
 if(!empty($default_sheng)){
    //向数据库中查询术语信息，
  $query_shi = db_select('taxonomy_term_data','ttd')
   ->fields('ttd', array('tid', 'name'));
   //将其父术语限定在前面的省份的具体值上
  $query_shi->leftJoin('taxonomy_term_hierarchy', 'tth', 'ttd.tid = tth.tid ');
   $query_shi->condition('tth.parent', $default_sheng);
   //由于省份信息里面，已经包含了词汇表信息，所以我们不再需要关联这个taxonomy_vocabulary表。
  //$query_sheng->leftJoin('taxonomy_vocabulary', 'tv', 'ttd.vid = tv.vid AND tv.machine_name = :machine_name', array(':machine_name' => 'diqu'));
   
   //按照tid排序，并执行
  $result_shi = $query_shi->orderBy('tid')->execute();
   
   //将返回的结果，进行迭代，为$shi_options赋值。
  foreach ($result_shi as $record) {
    $shi_options[$record->tid] = $record->name;
   }

 }

  //表单元素市
 $form['ssx']['shi'] = array(   
    '#title' => t('请选择您所在的市？'),   
   '#prefix' => '<div id="shi-wrapper-div">',   
   '#suffix' => '</div>',
    '#type' => 'select', 
    '#options' => $shi_options,   
    '#default_value' => $default_shi,
     '#ajax' => array(     
      'callback' => 'boss_manage_shi_callback',     
      'wrapper' => 'xian-wrapper-div',     
      'method' => 'replace',     
      'effect' => 'fade',   
    ),    
    '#DANGEROUS_SKIP_CHECK' => TRUE , 
  );
  
  //构建县的选项数组，首先设置了一个提示语
 $xian_options = array(
    '' => '请选择社区',
  );
  //在市不为空的情况下，取该市下的所有的县
 //dsm($form_state['values']['shi']);
 if(!empty($form_state['values']['shi'])){
  
    //向数据库中查询术语信息，
  $query_xian = db_select('taxonomy_term_data','ttd')
   ->fields('ttd', array('tid', 'name'));
   
   //将其父术语限定在前面的市的具体值上
  $query_xian->leftJoin('taxonomy_term_hierarchy', 'tth', 'ttd.tid = tth.tid AND tth.parent = :parent', array(':parent' => $form_state['values']['shi']));
   $query_xian->condition('tth.parent', $default_shi);
   
   //由于最前面省份信息里面，已经包含了词汇表信息，所以我们不再需要关联这个taxonomy_vocabulary表。
  //$query_sheng->leftJoin('taxonomy_vocabulary', 'tv', 'ttd.vid = tv.vid AND tv.machine_name = :machine_name', array(':machine_name' => 'diqu'));
   
   //按照tid排序，并执行
  $result_xian = $query_xian->orderBy('tid')->execute();
   
   //将返回的结果，进行迭代，为$xian_options赋值。
  foreach ($result_xian as $record) {
    $xian_options[$record->tid] = $record->name;
   }
  }
  
  //表单元素县
   $form['ssx']['xian'] = array(   
    '#title' => t('请选择您所在的县/区?'),   
   '#prefix' => '<div id="xian-wrapper-div">',   
   '#suffix' => '</div></div>',
    '#type' => 'select', 
    '#validate' => true,  
    '#options' => $xian_options,   
    '#default_value' => $default_xian,
     '#DANGEROUS_SKIP_CHECK' => TRUE ,
    
  );

   $form['infomation'] = array(
    '#type' => 'fieldset',
    '#access' => TRUE,
    '#title' => t('详细信息'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#weight' => 40,
    );
	$form['infomation']['manager_name']=array(
    '#title' => t('店主姓名'),
    '#type' => 'textfield',
    '#description' => t('店主姓名.'),
    '#default_value' => '店主姓名',
    '#maxlength' => 32,
    '#required' => TRUE,
    '#size' => 15,
    '#weight' => 3,
    //'#autocomplete_path' => 'pet/common_pet_names',
    );
	$form['infomation']['manager_mail']=array(
    '#title' => t('邮件'),
    '#type' => 'textfield',
    '#description' => t('邮件.'),
    '#default_value' => '邮件',
    '#maxlength' => 32,
    '#required' => TRUE,
    '#size' => 15,
    '#weight' => 5,
);
	$form['infomation']['manager_phone']=array(
    '#title' => t('电话'),
    '#type' => 'textfield',
    '#description' => t('电话.'),
    '#default_value' => '电话',
    '#maxlength' => 32,
    '#required' => TRUE,
    '#size' => 15,
    '#weight' => 5,
);
	$form['infomation']['shop_name']=array(
    '#title' => t('店面名字'),
    '#type' => 'textfield',
    '#description' => t('店面名字.'),
    '#default_value' => '店面名字',
    '#maxlength' => 32,
    '#required' => TRUE,
    '#size' => 15,
    '#weight' => 1,
);
$form['infomation']['shop_adress']=array(
    '#title' => t('店面地址'),
    '#type' => 'textfield',
    '#description' => t('店面地址.'),
    '#default_value' => '店面地址',
    '#maxlength' => 32,
    '#required' => TRUE,
    '#size' => 15,
    '#weight' => 2,
);
$form['infomation']['deliever_name']=array(
    '#title' => t('送货员'),
    '#type' => 'textfield',
    '#description' => t('送货员.'),
    '#default_value' => '送货员',
    '#maxlength' => 32,
    '#required' => TRUE,
    '#size' => 15,
    '#weight' => 5,
);
  //$form['actions'] = array('#type' => 'actions');
  //$form['actions']['submit'] = array(
   // '#type' => 'submit',
  //  '#value' => t('确认'),
  //   );
  $form['operation'] = array(
    '#type' => 'fieldset',
    '#access' => TRUE,
    '#title' => t(''),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#weight' => 120,
    );
  $form['operation']['submit'] = array(
      '#type' => 'submit',
      '#value' => '提交',
      '#submit' => array('boss_manage_submit'),//调用提交函数
);

  //$form['#validate'][] = 'boss_manage_validate';
  // Add the final user registration form submit handler.
  //$form['#submit'][] = 'boss_manage_submit';
  
   return $form;
 }

function boss_manage_validate($form, &$form_state) {
  if($form_state['values']['sheng']==''){
     form_set_error('sheng', '请您选择省份！');
   }
  elseif($form_state['values']['shi']==''){
     form_set_error('shi', '请您选择市区！');
   }
  elseif(array_key_exists('xian',$form_state['values']) && $form_state['values']['xian']==''){
     form_set_error('xian', '请您选择社区！');
   }
}

function boss_manage_submit($form, &$form_state) {
  if(user_is_logged_in())
  {
    
    global $user;
    $account= user_load($user->uid);
    $form_state['redirect'] = '';
	//dsm($form);
	//dsm($form['ssx']['sheng']['#options'][$form_state['values']['sheng']]);
	//dsm($form['ssx']['shi']['#options'][$form_state['values']['shi']]);
	//dsm($form['ssx']['xian']['#options'][$form_state['values']['xian']]);
	$area_name = $form['ssx']['sheng']['#options'][$form_state['values']['sheng']].$form['ssx']['shi']['#options'][$form_state['values']['shi']].$form['ssx']['xian']['#options'][$form_state['values']['xian']];
	//dsm($area_name);
	try
	{
	  $insert = db_insert("boss_manage")->fields(array('uid' => $user->uid, 'shop_name' => $form_state['values']['shop_name'],'deliever_name' => $form_state['values']['deliever_name'],'shop_adress' => $form_state['values']['shop_adress'],'manager_name' => $form_state['values']['manager_name'], 'manager_mail' => $form_state['values']['manager_mail'], 'manager_phone' => $form_state['values']['manager_phone'], 'area_name' => $area_name, 'area_id' => $form_state['values']['xian'], 'status' => 'active', 'created' => time(), 'changed' => time()))->execute();
      //dsm($form_state);
	}
   catch (PDOException $e) 
   {
        drupal_set_message(t('Error: %message', array('%message' => $e->getMessage())), 'error');
   }
  
   $form_state['redirect'] = '';
   return;
  }
  else{
       $form_state['redirect'] = 'user/login';
    }
}

/**
  * 表单元素sheng，它的值变更时，对应的Ajax回调函数。
 */
function boss_manage_sheng_callback($form,&$form_state){
   return $form['ssx']['shi'];
}


/**
  * 表单元素sheng，它的值变更时，对应的Ajax回调函数。
 */
function boss_manage_shi_callback($form,&$form_state){
   return $form['ssx']['xian'];
}

 




